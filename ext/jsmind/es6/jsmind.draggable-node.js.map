{"version":3,"file":"jsmind.draggable-node.js","sources":["../src/plugins/jsmind.draggable-node.js"],"sourcesContent":["/**\r\n * @license BSD\r\n * @copyright 2014-2023 hizzgdev@163.com\r\n *\r\n * Project Home:\r\n *   https://github.com/hizzgdev/jsmind/\r\n */\r\n\r\nimport jsMind from 'jsmind';\r\n\r\nif (!jsMind) {\r\n    throw new Error('jsMind is not defined');\r\n}\r\n\r\nconst $ = jsMind.$;\r\n\r\nconst clear_selection =\r\n    'getSelection' in $.w\r\n        ? function () {\r\n              $.w.getSelection().removeAllRanges();\r\n          }\r\n        : function () {\r\n              $.d.selection.empty();\r\n          };\r\n\r\nconst DEFAULT_OPTIONS = {\r\n    line_width: 5,\r\n    line_color: 'rgba(0,0,0,0.3)',\r\n    line_color_invalid: 'rgba(255,51,51,0.6)',\r\n    lookup_delay: 200,\r\n    lookup_interval: 100,\r\n    scrolling_trigger_width: 20,\r\n    scrolling_step_length: 10,\r\n    shadow_node_class_name: 'jsmind-draggable-shadow-node',\r\n};\r\n\r\nclass DraggableNode {\r\n    constructor(jm, options) {\r\n        var opts = {};\r\n        jsMind.util.json.merge(opts, DEFAULT_OPTIONS);\r\n        jsMind.util.json.merge(opts, options);\r\n\r\n        this.version = '0.4.0';\r\n        this.jm = jm;\r\n        this.options = opts;\r\n        this.e_canvas = null;\r\n        this.canvas_ctx = null;\r\n        this.shadow = null;\r\n        this.shadow_p_x = 0;\r\n        this.shadow_p_y = 0;\r\n        this.shadow_w = 0;\r\n        this.shadow_h = 0;\r\n        this.active_node = null;\r\n        this.target_node = null;\r\n        this.target_direct = null;\r\n        this.client_w = 0;\r\n        this.client_h = 0;\r\n        this.offset_x = 0;\r\n        this.offset_y = 0;\r\n        this.hlookup_delay = 0;\r\n        this.hlookup_timer = 0;\r\n        this.capture = false;\r\n        this.moved = false;\r\n        this.canvas_draggable = jm.get_view_draggable();\r\n        this.view_panel = jm.view.e_panel;\r\n        this.view_panel_rect = null;\r\n    }\r\n    init() {\r\n        this.create_canvas();\r\n        this.create_shadow();\r\n        this.event_bind();\r\n    }\r\n    resize() {\r\n        this.jm.view.e_nodes.appendChild(this.shadow);\r\n        this.e_canvas.width = this.jm.view.size.w;\r\n        this.e_canvas.height = this.jm.view.size.h;\r\n    }\r\n    create_canvas() {\r\n        var c = $.c('canvas');\r\n        this.jm.view.e_panel.appendChild(c);\r\n        var ctx = c.getContext('2d');\r\n        this.e_canvas = c;\r\n        this.canvas_ctx = ctx;\r\n    }\r\n    create_shadow() {\r\n        var s = $.c('jmnode');\r\n        s.style.visibility = 'hidden';\r\n        s.style.zIndex = '3';\r\n        s.style.cursor = 'move';\r\n        s.style.opacity = '0.7';\r\n        s.className = this.options.shadow_node_class_name;\r\n        this.shadow = s;\r\n    }\r\n    reset_shadow(el) {\r\n        var s = this.shadow.style;\r\n        this.shadow.innerHTML = el.innerHTML;\r\n        s.left = el.style.left;\r\n        s.top = el.style.top;\r\n        s.width = el.style.width;\r\n        s.height = el.style.height;\r\n        s.backgroundImage = el.style.backgroundImage;\r\n        s.backgroundSize = el.style.backgroundSize;\r\n        s.transform = el.style.transform;\r\n        this.shadow_w = this.shadow.clientWidth;\r\n        this.shadow_h = this.shadow.clientHeight;\r\n    }\r\n    show_shadow() {\r\n        if (!this.moved) {\r\n            this.shadow.style.visibility = 'visible';\r\n        }\r\n    }\r\n    hide_shadow() {\r\n        this.shadow.style.visibility = 'hidden';\r\n    }\r\n    magnet_shadow(shadow_p, node_p, invalid) {\r\n        this.canvas_ctx.lineWidth = this.options.line_width;\r\n        this.canvas_ctx.strokeStyle = invalid\r\n            ? this.options.line_color_invalid\r\n            : this.options.line_color;\r\n        this.canvas_ctx.lineCap = 'round';\r\n        this.clear_lines();\r\n        this.canvas_lineto(shadow_p.x, shadow_p.y, node_p.x, node_p.y);\r\n    }\r\n    clear_lines() {\r\n        this.canvas_ctx.clearRect(0, 0, this.jm.view.size.w, this.jm.view.size.h);\r\n    }\r\n    canvas_lineto(x1, y1, x2, y2) {\r\n        this.canvas_ctx.beginPath();\r\n        this.canvas_ctx.moveTo(x1, y1);\r\n        this.canvas_ctx.lineTo(x2, y2);\r\n        this.canvas_ctx.stroke();\r\n    }\r\n    event_bind() {\r\n        var jd = this;\r\n        var container = this.jm.view.container;\r\n        $.on(container, 'mousedown', function (e) {\r\n            if (e.button === 0) {\r\n                jd.dragstart.call(jd, e);\r\n            }\r\n        });\r\n        $.on(container, 'mousemove', function (e) {\r\n            if (e.movementX !== 0 || e.movementY !== 0) {\r\n                jd.drag.call(jd, e);\r\n            }\r\n        });\r\n        $.on(container, 'mouseup', function (e) {\r\n            jd.dragend.call(jd, e);\r\n        });\r\n        $.on(container, 'touchstart', function (e) {\r\n            jd.dragstart.call(jd, e);\r\n        });\r\n        $.on(container, 'touchmove', function (e) {\r\n            jd.drag.call(jd, e);\r\n        });\r\n        $.on(container, 'touchend', function (e) {\r\n            jd.dragend.call(jd, e);\r\n        });\r\n    }\r\n    dragstart(e) {\r\n        if (!this.jm.get_editable()) {\r\n            return;\r\n        }\r\n        if (this.capture) {\r\n            return;\r\n        }\r\n        var jview = this.jm.view;\r\n        if (jview.is_editing()) {\r\n            return;\r\n        }\r\n        this.active_node = null;\r\n        this.view_draggable = this.jm.get_view_draggable();\r\n\r\n        var el = this.find_node_element(e.target);\r\n        if (!el) {\r\n            return;\r\n        }\r\n        if (this.view_draggable) {\r\n            this.jm.disable_view_draggable();\r\n        }\r\n        var nodeid = jview.get_binded_nodeid(el);\r\n        if (!!nodeid) {\r\n            var node = this.jm.get_node(nodeid);\r\n            if (!node.isroot) {\r\n                this.reset_shadow(el);\r\n                this.view_panel_rect = this.view_panel.getBoundingClientRect();\r\n                this.active_node = node;\r\n                this.offset_x =\r\n                    (e.clientX || e.touches[0].clientX) / jview.zoom_current - el.offsetLeft;\r\n                this.offset_y =\r\n                    (e.clientY || e.touches[0].clientY) / jview.zoom_current - el.offsetTop;\r\n                this.client_hw = Math.floor(el.clientWidth / 2);\r\n                this.client_hh = Math.floor(el.clientHeight / 2);\r\n                if (this.hlookup_delay != 0) {\r\n                    $.w.clearTimeout(this.hlookup_delay);\r\n                }\r\n                if (this.hlookup_timer != 0) {\r\n                    $.w.clearInterval(this.hlookup_timer);\r\n                }\r\n                var jd = this;\r\n                this.hlookup_delay = $.w.setTimeout(function () {\r\n                    jd.hlookup_delay = 0;\r\n                    jd.hlookup_timer = $.w.setInterval(function () {\r\n                        jd.lookup_target_node.call(jd);\r\n                    }, jd.options.lookup_interval);\r\n                }, this.options.lookup_delay);\r\n                jd.capture = true;\r\n            }\r\n        }\r\n    }\r\n    drag(e) {\r\n        if (!this.jm.get_editable()) {\r\n            return;\r\n        }\r\n        if (this.capture) {\r\n            e.preventDefault();\r\n            this.show_shadow();\r\n            this.moved = true;\r\n            clear_selection();\r\n            var jview = this.jm.view;\r\n            var px = (e.clientX || e.touches[0].clientX) / jview.zoom_current - this.offset_x;\r\n            var py = (e.clientY || e.touches[0].clientY) / jview.zoom_current - this.offset_y;\r\n            // scrolling container axisY if drag nodes exceeding container\r\n            if (\r\n                e.clientY - this.view_panel_rect.top < this.options.scrolling_trigger_width &&\r\n                this.view_panel.scrollTop > this.options.scrolling_step_length\r\n            ) {\r\n                this.view_panel.scrollBy(0, -this.options.scrolling_step_length);\r\n                this.offset_y += this.options.scrolling_step_length / jview.zoom_current;\r\n            } else if (\r\n                this.view_panel_rect.bottom - e.clientY < this.options.scrolling_trigger_width &&\r\n                this.view_panel.scrollTop <\r\n                    this.view_panel.scrollHeight -\r\n                        this.view_panel_rect.height -\r\n                        this.options.scrolling_step_length\r\n            ) {\r\n                this.view_panel.scrollBy(0, this.options.scrolling_step_length);\r\n                this.offset_y -= this.options.scrolling_step_length / jview.zoom_current;\r\n            }\r\n            // scrolling container axisX if drag nodes exceeding container\r\n            if (\r\n                e.clientX - this.view_panel_rect.left < this.options.scrolling_trigger_width &&\r\n                this.view_panel.scrollLeft > this.options.scrolling_step_length\r\n            ) {\r\n                this.view_panel.scrollBy(-this.options.scrolling_step_length, 0);\r\n                this.offset_x += this.options.scrolling_step_length / jview.zoom_current;\r\n            } else if (\r\n                this.view_panel_rect.right - e.clientX < this.options.scrolling_trigger_width &&\r\n                this.view_panel.scrollLeft <\r\n                    this.view_panel.scrollWidth -\r\n                        this.view_panel_rect.width -\r\n                        this.options.scrolling_step_length\r\n            ) {\r\n                this.view_panel.scrollBy(this.options.scrolling_step_length, 0);\r\n                this.offset_x -= this.options.scrolling_step_length / jview.zoom_current;\r\n            }\r\n            this.shadow.style.left = px + 'px';\r\n            this.shadow.style.top = py + 'px';\r\n            clear_selection();\r\n        }\r\n    }\r\n    dragend(e) {\r\n        if (!this.jm.get_editable()) {\r\n            return;\r\n        }\r\n        if (this.view_draggable) {\r\n            this.jm.enable_view_draggable();\r\n        }\r\n        if (this.capture) {\r\n            if (this.hlookup_delay != 0) {\r\n                $.w.clearTimeout(this.hlookup_delay);\r\n                this.hlookup_delay = 0;\r\n                this.clear_lines();\r\n            }\r\n            if (this.hlookup_timer != 0) {\r\n                $.w.clearInterval(this.hlookup_timer);\r\n                this.hlookup_timer = 0;\r\n                this.clear_lines();\r\n            }\r\n            if (this.moved) {\r\n                var src_node = this.active_node;\r\n                var target_node = this.target_node;\r\n                var target_direct = this.target_direct;\r\n                this.move_node(src_node, target_node, target_direct);\r\n            }\r\n            this.hide_shadow();\r\n        }\r\n        this.view_panel_rect = null;\r\n        this.moved = false;\r\n        this.capture = false;\r\n    }\r\n    find_node_element(el) {\r\n        if (\r\n            el === this.jm.view.e_nodes ||\r\n            el === this.jm.view.e_panel ||\r\n            el === this.jm.view.container\r\n        ) {\r\n            return null;\r\n        }\r\n        if (el.tagName.toLowerCase() === 'jmnode') {\r\n            return el;\r\n        }\r\n        return this.find_node_element(el.parentNode);\r\n    }\r\n    lookup_target_node() {\r\n        let sx = this.shadow.offsetLeft;\r\n        let sy = this.shadow.offsetTop;\r\n        if (sx === this.shadow_p_x && sy === this.shadow_p_y) {\r\n            return;\r\n        }\r\n        this.shadow_p_x = sx;\r\n        this.shadow_p_y = sy;\r\n\r\n        let target_direction =\r\n            this.shadow_p_x + this.shadow_w / 2 >= this.get_root_x()\r\n                ? jsMind.direction.right\r\n                : jsMind.direction.left;\r\n        let overlapping_node = this.lookup_overlapping_node_parent(target_direction);\r\n        let target_node = overlapping_node || this.lookup_close_node(target_direction);\r\n        if (!!target_node) {\r\n            let points = this.calc_point_of_node(target_node, target_direction);\r\n            let invalid = jsMind.node.inherited(this.active_node, target_node);\r\n            this.magnet_shadow(points.sp, points.np, invalid);\r\n            this.target_node = target_node;\r\n            this.target_direct = target_direction;\r\n        }\r\n    }\r\n    get_root_x() {\r\n        let root = this.jm.get_root();\r\n        let root_location = root.get_location();\r\n        let root_size = root.get_size();\r\n        return root_location.x + root_size.w / 2;\r\n    }\r\n\r\n    lookup_overlapping_node_parent(direction) {\r\n        let shadowRect = this.shadow.getBoundingClientRect();\r\n        let x = shadowRect.x + (shadowRect.width * (1 - direction)) / 2;\r\n        let deltaX = (this.jm.options.layout.hspace + this.jm.options.layout.pspace) * direction;\r\n        let deltaY = shadowRect.height;\r\n        let points = [\r\n            [x, shadowRect.y],\r\n            [x, shadowRect.y + deltaY / 2],\r\n            [x, shadowRect.y + deltaY],\r\n            [x + deltaX / 2, shadowRect.y],\r\n            [x + deltaX / 2, shadowRect.y + deltaY / 2],\r\n            [x + deltaX / 2, shadowRect.y + deltaY],\r\n            [x + deltaX, shadowRect.y],\r\n            [x + deltaX, shadowRect.y + deltaY / 2],\r\n            [x + deltaX, shadowRect.y + deltaY],\r\n        ];\r\n        for (const p of points) {\r\n            let n = this.lookup_node_parent_by_location(p[0], p[1]);\r\n            if (!!n) {\r\n                return n;\r\n            }\r\n        }\r\n    }\r\n\r\n    lookup_node_parent_by_location(x, y) {\r\n        return $.d\r\n            .elementsFromPoint(x, y)\r\n            .filter(\r\n                x => x.tagName === 'JMNODE' && x.className !== this.options.shadow_node_class_name\r\n            )\r\n            .map(el => this.jm.view.get_binded_nodeid(el))\r\n            .map(id => id && this.jm.mind.nodes[id])\r\n            .map(n => n && n.parent)\r\n            .find(n => n);\r\n    }\r\n\r\n    lookup_close_node(direction) {\r\n        return Object.values(this.jm.mind.nodes)\r\n            .filter(n => n.direction == direction || n.isroot)\r\n            .filter(n => this.jm.layout.is_visible(n))\r\n            .filter(n => this.shadow_on_target_side(n, direction))\r\n            .map(n => ({ node: n, distance: this.shadow_to_node(n, direction) }))\r\n            .reduce(\r\n                (prev, curr) => {\r\n                    return prev.distance < curr.distance ? prev : curr;\r\n                },\r\n                { node: this.jm.get_root(), distance: Number.MAX_VALUE }\r\n            ).node;\r\n    }\r\n\r\n    shadow_on_target_side(node, dir) {\r\n        return (\r\n            (dir == jsMind.direction.right && this.shadow_to_right_of_node(node) > 0) ||\r\n            (dir == jsMind.direction.left && this.shadow_to_left_of_node(node) > 0)\r\n        );\r\n    }\r\n\r\n    shadow_to_right_of_node(node) {\r\n        return this.shadow_p_x - node.get_location().x - node.get_size().w;\r\n    }\r\n\r\n    shadow_to_left_of_node(node) {\r\n        return node.get_location().x - this.shadow_p_x - this.shadow_w;\r\n    }\r\n\r\n    shadow_to_base_line_of_node(node) {\r\n        return this.shadow_p_y + this.shadow_h / 2 - node.get_location().y - node.get_size().h / 2;\r\n    }\r\n\r\n    shadow_to_node(node, dir) {\r\n        let distance_x =\r\n            dir === jsMind.direction.right\r\n                ? Math.abs(this.shadow_to_right_of_node(node))\r\n                : Math.abs(this.shadow_to_left_of_node(node));\r\n        let distance_y = Math.abs(this.shadow_to_base_line_of_node(node));\r\n        return distance_x + distance_y;\r\n    }\r\n\r\n    calc_point_of_node(node, dir) {\r\n        let ns = node.get_size();\r\n        let nl = node.get_location();\r\n        let node_x = node.isroot\r\n            ? nl.x + ns.w / 2\r\n            : nl.x + (ns.w * (1 + dir)) / 2 + this.options.line_width * dir;\r\n        let node_y = nl.y + ns.h / 2;\r\n        let shadow_x =\r\n            this.shadow_p_x + (this.shadow_w * (1 - dir)) / 2 - this.options.line_width * dir;\r\n        let shadow_y = this.shadow_p_y + this.shadow_h / 2;\r\n        return {\r\n            sp: { x: shadow_x, y: shadow_y },\r\n            np: { x: node_x, y: node_y },\r\n        };\r\n    }\r\n\r\n    move_node(src_node, target_node, target_direct) {\r\n        var shadow_h = this.shadow.offsetTop;\r\n        if (!!target_node && !!src_node && !jsMind.node.inherited(src_node, target_node)) {\r\n            // lookup before_node\r\n            var sibling_nodes = target_node.children;\r\n            var sc = sibling_nodes.length;\r\n            var node = null;\r\n            var delta_y = Number.MAX_VALUE;\r\n            var node_before = null;\r\n            var beforeid = '_last_';\r\n            while (sc--) {\r\n                node = sibling_nodes[sc];\r\n                if (node.direction == target_direct && node.id != src_node.id) {\r\n                    var dy = node.get_location().y - shadow_h;\r\n                    if (dy > 0 && dy < delta_y) {\r\n                        delta_y = dy;\r\n                        node_before = node;\r\n                        beforeid = '_first_';\r\n                    }\r\n                }\r\n            }\r\n            if (!!node_before) {\r\n                beforeid = node_before.id;\r\n            }\r\n            this.jm.move_node(src_node.id, beforeid, target_node.id, target_direct);\r\n        }\r\n        this.active_node = null;\r\n        this.target_node = null;\r\n        this.target_direct = null;\r\n    }\r\n    jm_event_handle(type, data) {\r\n        if (type === jsMind.event_type.resize) {\r\n            this.resize();\r\n        }\r\n    }\r\n}\r\n\r\nvar draggable_plugin = new jsMind.plugin('draggable_node', function (jm, options) {\r\n    var jd = new DraggableNode(jm, options);\r\n    jd.init();\r\n    jm.add_event_listener(function (type, data) {\r\n        jd.jm_event_handle.call(jd, type, data);\r\n    });\r\n});\r\n\r\njsMind.register_plugin(draggable_plugin);\r\n"],"names":["jsMind","Error","$","clear_selection","w","getSelection","removeAllRanges","d","selection","empty","DEFAULT_OPTIONS","line_width","line_color","line_color_invalid","lookup_delay","lookup_interval","scrolling_trigger_width","scrolling_step_length","shadow_node_class_name","DraggableNode","constructor","jm","options","opts","util","json","merge","this","version","e_canvas","canvas_ctx","shadow","shadow_p_x","shadow_p_y","shadow_w","shadow_h","active_node","target_node","target_direct","client_w","client_h","offset_x","offset_y","hlookup_delay","hlookup_timer","capture","moved","canvas_draggable","get_view_draggable","view_panel","view","e_panel","view_panel_rect","init","create_canvas","create_shadow","event_bind","resize","e_nodes","appendChild","width","size","height","h","c","ctx","getContext","s","style","visibility","zIndex","cursor","opacity","className","reset_shadow","el","innerHTML","left","top","backgroundImage","backgroundSize","transform","clientWidth","clientHeight","show_shadow","hide_shadow","magnet_shadow","shadow_p","node_p","invalid","lineWidth","strokeStyle","lineCap","clear_lines","canvas_lineto","x","y","clearRect","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","jd","container","on","e","button","dragstart","call","movementX","movementY","drag","dragend","get_editable","jview","is_editing","view_draggable","find_node_element","target","disable_view_draggable","nodeid","get_binded_nodeid","node","get_node","isroot","getBoundingClientRect","clientX","touches","zoom_current","offsetLeft","clientY","offsetTop","client_hw","Math","floor","client_hh","clearTimeout","clearInterval","setTimeout","setInterval","lookup_target_node","preventDefault","px","py","scrollTop","scrollBy","bottom","scrollHeight","scrollLeft","right","scrollWidth","enable_view_draggable","src_node","move_node","tagName","toLowerCase","parentNode","sx","sy","target_direction","get_root_x","direction","lookup_overlapping_node_parent","lookup_close_node","points","calc_point_of_node","inherited","sp","np","root","get_root","root_location","get_location","root_size","get_size","shadowRect","deltaX","layout","hspace","pspace","deltaY","p","n","lookup_node_parent_by_location","elementsFromPoint","filter","map","id","mind","nodes","parent","find","Object","values","is_visible","shadow_on_target_side","distance","shadow_to_node","reduce","prev","curr","Number","MAX_VALUE","dir","shadow_to_right_of_node","shadow_to_left_of_node","shadow_to_base_line_of_node","abs","ns","nl","node_x","node_y","sibling_nodes","children","sc","length","delta_y","node_before","beforeid","dy","jm_event_handle","type","data","event_type","draggable_plugin","plugin","add_event_listener","register_plugin"],"mappings":"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"}